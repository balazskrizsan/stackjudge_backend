name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: DEBUG

jobs:
  build:
    runs-on: ubuntu-latest

    services:

      postgres:
        image: "postgres:14"
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin_pass
          POSTGRES_DB: stackjudge
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: "redis:6.2.6"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - uses: actions/checkout@v3

    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: kbalazsworks/stackjudge_backend

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: zulu
        cache: maven

    - name: Build with Maven
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/postgres
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_REDIS_HOST: redis
        SPRING_REDIS_PASSWORD:
        SPRING_REDIS_PORT: 6379
        AWS_MAVEN_PASSWORD: ${{ secrets.AWS_MAVEN_PASSWORD }}
      run: mvn -B package --file pom.xml --settings settings.xml -DskipTests=true -Dmaven.repo.local=./m2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: File system info
      run: |
        echo "===========> github.workspace var: ${{ github.workspace }}"
        echo "===========> pwd:"
        pwd
        echo "===========> ls -hal:"
        ls -hal
        echo "===========> ls -hal /src:"
        ls -hal ./src
        echo "===========> ls -hal /target:"
        ls -hal ./target
        echo "===========> ls -hal /m2:"
        ls -hal ./m2
        echo "===========> print generated settings.xml"
        cat ./settings.xml

    - name: Temporarily save jar artifact
      uses: actions/upload-artifact@v2
      with:
        name: jar-artifact
        path: ${{ github.workspace }}/target/stackjudge-${{ env.RELEASE_VERSION }}.jar
        retention-days: 1

    - name: Copy created .jar for docker
      run: |
        cp ${{ github.workspace }}/target/stackjudge-${{ env.RELEASE_VERSION }}.jar ./stackjudge-docker-latest.jar

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
