/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.stackjudge.db.tables;


import com.kbalazsworks.stackjudge.db.Keys;
import com.kbalazsworks.stackjudge.db.Public;
import com.kbalazsworks.stackjudge.db.tables.records.ProtectedReviewLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProtectedReviewLog extends TableImpl<ProtectedReviewLogRecord> {

    private static final long serialVersionUID = -1511566121;

    /**
     * The reference instance of <code>public.protected_review_log</code>
     */
    public static final ProtectedReviewLog PROTECTED_REVIEW_LOG = new ProtectedReviewLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProtectedReviewLogRecord> getRecordType() {
        return ProtectedReviewLogRecord.class;
    }

    /**
     * The column <code>public.protected_review_log.id</code>.
     */
    public final TableField<ProtectedReviewLogRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.protected_review_log.viewer_user_id</code>.
     */
    public final TableField<ProtectedReviewLogRecord, Long> VIEWER_USER_ID = createField(DSL.name("viewer_user_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.protected_review_log.review_id</code>.
     */
    public final TableField<ProtectedReviewLogRecord, Long> REVIEW_ID = createField(DSL.name("review_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.protected_review_log.created_at</code>.
     */
    public final TableField<ProtectedReviewLogRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.protected_review_log</code> table reference
     */
    public ProtectedReviewLog() {
        this(DSL.name("protected_review_log"), null);
    }

    /**
     * Create an aliased <code>public.protected_review_log</code> table reference
     */
    public ProtectedReviewLog(String alias) {
        this(DSL.name(alias), PROTECTED_REVIEW_LOG);
    }

    /**
     * Create an aliased <code>public.protected_review_log</code> table reference
     */
    public ProtectedReviewLog(Name alias) {
        this(alias, PROTECTED_REVIEW_LOG);
    }

    private ProtectedReviewLog(Name alias, Table<ProtectedReviewLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProtectedReviewLog(Name alias, Table<ProtectedReviewLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ProtectedReviewLog(Table<O> child, ForeignKey<O, ProtectedReviewLogRecord> key) {
        super(child, key, PROTECTED_REVIEW_LOG);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<ProtectedReviewLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_PROTECTED_REVIEW_LOG;
    }

    @Override
    public UniqueKey<ProtectedReviewLogRecord> getPrimaryKey() {
        return Keys.PROTECTED_REVIEW_LOG_PK;
    }

    @Override
    public List<UniqueKey<ProtectedReviewLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ProtectedReviewLogRecord>>asList(Keys.PROTECTED_REVIEW_LOG_PK);
    }

    @Override
    public List<ForeignKey<ProtectedReviewLogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProtectedReviewLogRecord, ?>>asList(Keys.PROTECTED_REVIEW_LOG__FK__PROTECTED_REVIEW_LOG_REVIEW_ID__REVIEW_ID__ON_DELETE_CASCAD);
    }

    public Review review() {
        return new Review(this, Keys.PROTECTED_REVIEW_LOG__FK__PROTECTED_REVIEW_LOG_REVIEW_ID__REVIEW_ID__ON_DELETE_CASCAD);
    }

    @Override
    public ProtectedReviewLog as(String alias) {
        return new ProtectedReviewLog(DSL.name(alias), this);
    }

    @Override
    public ProtectedReviewLog as(Name alias) {
        return new ProtectedReviewLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProtectedReviewLog rename(String name) {
        return new ProtectedReviewLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProtectedReviewLog rename(Name name) {
        return new ProtectedReviewLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
