/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.stackjudge.db.tables;


import com.kbalazsworks.stackjudge.db.Keys;
import com.kbalazsworks.stackjudge.db.Public;
import com.kbalazsworks.stackjudge.db.tables.records.CompanyOwnRequestRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyOwnRequest extends TableImpl<CompanyOwnRequestRecord> {

    private static final long serialVersionUID = 1226538159;

    /**
     * The reference instance of <code>public.company_own_request</code>
     */
    public static final CompanyOwnRequest COMPANY_OWN_REQUEST = new CompanyOwnRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyOwnRequestRecord> getRecordType() {
        return CompanyOwnRequestRecord.class;
    }

    /**
     * The column <code>public.company_own_request.requester_user_id</code>.
     */
    public final TableField<CompanyOwnRequestRecord, Long> REQUESTER_USER_ID = createField(DSL.name("requester_user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.company_own_request.requested_company_id</code>.
     */
    public final TableField<CompanyOwnRequestRecord, Long> REQUESTED_COMPANY_ID = createField(DSL.name("requested_company_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.company_own_request.secret</code>.
     */
    public final TableField<CompanyOwnRequestRecord, String> SECRET = createField(DSL.name("secret"), org.jooq.impl.SQLDataType.VARCHAR(60), this, "");

    /**
     * The column <code>public.company_own_request.created_at</code>.
     */
    public final TableField<CompanyOwnRequestRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.company_own_request</code> table reference
     */
    public CompanyOwnRequest() {
        this(DSL.name("company_own_request"), null);
    }

    /**
     * Create an aliased <code>public.company_own_request</code> table reference
     */
    public CompanyOwnRequest(String alias) {
        this(DSL.name(alias), COMPANY_OWN_REQUEST);
    }

    /**
     * Create an aliased <code>public.company_own_request</code> table reference
     */
    public CompanyOwnRequest(Name alias) {
        this(alias, COMPANY_OWN_REQUEST);
    }

    private CompanyOwnRequest(Name alias, Table<CompanyOwnRequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanyOwnRequest(Name alias, Table<CompanyOwnRequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CompanyOwnRequest(Table<O> child, ForeignKey<O, CompanyOwnRequestRecord> key) {
        super(child, key, COMPANY_OWN_REQUEST);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<CompanyOwnRequestRecord> getPrimaryKey() {
        return Keys.REQUESTER_USER_ID___REQUESTED_COMPANY_ID___PK;
    }

    @Override
    public List<UniqueKey<CompanyOwnRequestRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyOwnRequestRecord>>asList(Keys.REQUESTER_USER_ID___REQUESTED_COMPANY_ID___PK);
    }

    @Override
    public List<ForeignKey<CompanyOwnRequestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CompanyOwnRequestRecord, ?>>asList(Keys.COMPANY_OWN_REQUEST__FK___COMPANY_OWN_REQUEST__ID___USERS__ID___ON_DELETE_CASCADE);
    }

    public Users users() {
        return new Users(this, Keys.COMPANY_OWN_REQUEST__FK___COMPANY_OWN_REQUEST__ID___USERS__ID___ON_DELETE_CASCADE);
    }

    @Override
    public CompanyOwnRequest as(String alias) {
        return new CompanyOwnRequest(DSL.name(alias), this);
    }

    @Override
    public CompanyOwnRequest as(Name alias) {
        return new CompanyOwnRequest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyOwnRequest rename(String name) {
        return new CompanyOwnRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyOwnRequest rename(Name name) {
        return new CompanyOwnRequest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
