/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.stackjudge.db.tables.records;


import com.kbalazsworks.stackjudge.db.tables.GoogleStaticMapsCache;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoogleStaticMapsCacheRecord extends UpdatableRecordImpl<GoogleStaticMapsCacheRecord> implements Record3<String, String, LocalDateTime> {

    private static final long serialVersionUID = -1996192884;

    /**
     * Setter for <code>public.google_static_maps_cache.hash</code>.
     */
    public void setHash(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.google_static_maps_cache.hash</code>.
     */
    public String getHash() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.google_static_maps_cache.file_name</code>.
     */
    public void setFileName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.google_static_maps_cache.file_name</code>.
     */
    public String getFileName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.google_static_maps_cache.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.google_static_maps_cache.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return GoogleStaticMapsCache.GOOGLE_STATIC_MAPS_CACHE.HASH;
    }

    @Override
    public Field<String> field2() {
        return GoogleStaticMapsCache.GOOGLE_STATIC_MAPS_CACHE.FILE_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return GoogleStaticMapsCache.GOOGLE_STATIC_MAPS_CACHE.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getHash();
    }

    @Override
    public String component2() {
        return getFileName();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getHash();
    }

    @Override
    public String value2() {
        return getFileName();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public GoogleStaticMapsCacheRecord value1(String value) {
        setHash(value);
        return this;
    }

    @Override
    public GoogleStaticMapsCacheRecord value2(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public GoogleStaticMapsCacheRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public GoogleStaticMapsCacheRecord values(String value1, String value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GoogleStaticMapsCacheRecord
     */
    public GoogleStaticMapsCacheRecord() {
        super(GoogleStaticMapsCache.GOOGLE_STATIC_MAPS_CACHE);
    }

    /**
     * Create a detached, initialised GoogleStaticMapsCacheRecord
     */
    public GoogleStaticMapsCacheRecord(String hash, String fileName, LocalDateTime updatedAt) {
        super(GoogleStaticMapsCache.GOOGLE_STATIC_MAPS_CACHE);

        set(0, hash);
        set(1, fileName);
        set(2, updatedAt);
    }
}
