/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.stackjudge.db.tables;


import com.kbalazsworks.stackjudge.db.Keys;
import com.kbalazsworks.stackjudge.db.Public;
import com.kbalazsworks.stackjudge.db.tables.records.GoogleStaticMapsCacheRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoogleStaticMapsCache extends TableImpl<GoogleStaticMapsCacheRecord> {

    private static final long serialVersionUID = 1804434646;

    /**
     * The reference instance of <code>public.google_static_maps_cache</code>
     */
    public static final GoogleStaticMapsCache GOOGLE_STATIC_MAPS_CACHE = new GoogleStaticMapsCache();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoogleStaticMapsCacheRecord> getRecordType() {
        return GoogleStaticMapsCacheRecord.class;
    }

    /**
     * The column <code>public.google_static_maps_cache.hash</code>.
     */
    public final TableField<GoogleStaticMapsCacheRecord, String> HASH = createField(DSL.name("hash"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>public.google_static_maps_cache.file_name</code>.
     */
    public final TableField<GoogleStaticMapsCacheRecord, String> FILE_NAME = createField(DSL.name("file_name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>public.google_static_maps_cache.updated_at</code>.
     */
    public final TableField<GoogleStaticMapsCacheRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.google_static_maps_cache</code> table reference
     */
    public GoogleStaticMapsCache() {
        this(DSL.name("google_static_maps_cache"), null);
    }

    /**
     * Create an aliased <code>public.google_static_maps_cache</code> table reference
     */
    public GoogleStaticMapsCache(String alias) {
        this(DSL.name(alias), GOOGLE_STATIC_MAPS_CACHE);
    }

    /**
     * Create an aliased <code>public.google_static_maps_cache</code> table reference
     */
    public GoogleStaticMapsCache(Name alias) {
        this(alias, GOOGLE_STATIC_MAPS_CACHE);
    }

    private GoogleStaticMapsCache(Name alias, Table<GoogleStaticMapsCacheRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoogleStaticMapsCache(Name alias, Table<GoogleStaticMapsCacheRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> GoogleStaticMapsCache(Table<O> child, ForeignKey<O, GoogleStaticMapsCacheRecord> key) {
        super(child, key, GOOGLE_STATIC_MAPS_CACHE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<GoogleStaticMapsCacheRecord> getPrimaryKey() {
        return Keys.GOOGLE_STATIC_MAPS_CACHE_PK;
    }

    @Override
    public List<UniqueKey<GoogleStaticMapsCacheRecord>> getKeys() {
        return Arrays.<UniqueKey<GoogleStaticMapsCacheRecord>>asList(Keys.GOOGLE_STATIC_MAPS_CACHE_PK);
    }

    @Override
    public GoogleStaticMapsCache as(String alias) {
        return new GoogleStaticMapsCache(DSL.name(alias), this);
    }

    @Override
    public GoogleStaticMapsCache as(Name alias) {
        return new GoogleStaticMapsCache(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoogleStaticMapsCache rename(String name) {
        return new GoogleStaticMapsCache(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoogleStaticMapsCache rename(Name name) {
        return new GoogleStaticMapsCache(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
